virtual warehouse:
A virtual warehouse, often referred to simply as a ‚Äúwarehouse‚Äù, is a cluster of compute resources in Snowflake.
A virtual warehouse is available in two types:
  1. Standard
  2. Snowpark-optimized
-----------------------------------------------------------------------------------------------------------------------------
A warehouse provides:
  1. resources, such as CPU
  2. memory,
  3.and temporary storage, to perform the DML,Select,Loading ,unloading operations

Note :
To perform these operations, a warehouse must be running and in use for the session. While a warehouse is running, it consumes Snowflake credits.
------------------------------------------------------------------------------------------------------------------------------------------------------------
Warehouse considerations : best practices for using virtual warehouses in Snowflake to process queries.
A warehouse is affected by numerous factors =>
  1. number of concurrent users/queries
  2. number of tables being queried, 
  3. data size and composition,
  4. pecific requirements for warehouse availability, latency, and cost.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
How are credits charged for warehouses?
Credit charges are calculated based on:
  1. The warehouse size.
  2. The number of clusters (if using multi-cluster warehouses).
  3. The length of time the compute resources in each cluster runs.

üîπ Key Rule:
  1. Minimum billing time per session is 60 seconds.
  2. After the first 60 seconds, billing is per-second.
  3. If the warehouse shuts down, any new start incurs another minimum 60-second charge.

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Example of understanding how snowflake virtual warehouse billing works:

1. Warehouse runs for 30 to 60 seconds ‚Üí Billed for 60 seconds
Since it's less than 60 seconds, it hits the minimum billing duration.
‚úÖ Charged time = 60 seconds

2. Warehouse runs for 61 seconds ‚Üí Billed for 61 seconds
First 60 seconds ‚Üí Minimum charge
The 1 extra second ‚Üí Charged per-second
‚úÖ Charged time = 61 seconds

3. Warehouse runs for 61 seconds, shuts down, restarts and runs < 60 seconds ‚Üí Billed for 121 seconds
First run:
60 seconds minimum + 1 second = 61 seconds
Second run (after restart):
Less than 60 seconds ‚Üí Minimum 60 seconds charge applies again
‚úÖ Charged time = 61 + 60 = 121 seconds

---------------------------------------------------------------------------------------------------------------------------------------------------------------
  üîë Key Points:

  1. Query Complexity Affects Compute Usage =>
      More complex queries require more compute resources.
      Larger warehouses generally handle complex queries more efficiently.

  2. Warehouse Size Scales Linearly=>
      As warehouse size increases, performance improves ‚Äî especially for complex or large queries.
      
  3. Data Size Matters More Than Row Count
      The total size of the tables (in GB or TB) has a greater impact than just the number of rows.

  4. Query Structure Influences Performance
      Use of filters (predicates), joins, and number of tables directly affect query load.

  5. Consistency Helps Optimization
      Run similar types of queries (in terms of complexity and data sets) on the same warehouse.
      Mixing simple and complex queries in one warehouse can make performance tuning harder.
------------------------------------------------------------------------------------------------------------------------------------------------------------------

üí° Pro Tip:
  1.  To optimize performance and warehouse sizing:
  2.  Group similar workloads together.
  3.  Avoid mixing light and heavy queries on the same compute resource.

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Auto Scale :=>

What it does:
Auto Scale automatically adjusts the number of warehouse clusters based on query load.

How it works:
You set a minimum and maximum number of clusters (e.g., Min: 1, Max: 5).
When workload increases (e.g., many concurrent queries), additional clusters are spun up automatically.
When load decreases, unused clusters shut down after a short idle period (usually 5 minutes).

Benefits:
Handles spikes in query volume without slowing down performance.
Reduces cost by only using extra compute when needed.

Use Case:
Ideal for variable workloads or when many users/query jobs run at the same time.
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Maximized Mode
What it does:
Maximized mode always keeps the maximum number of clusters running, regardless of the current load.

How it works:
If you configure Max Clusters = 3, all 3 clusters are always active.
Snowflake does not auto-scale down even if workload is light.

Benefits:
Guarantees maximum performance and concurrency.
Useful for mission-critical or high-volume workloads with constant demand.

Use Case:
Best for consistent, heavy workloads where predictable high throughput is required.
----------------------------------------------------------------------------------------------------------------------------------------

üöÄ How Warehouse Caching Impacts Queries
‚ö° Faster Queries with Caching
      Warehouses cache table data while processing queries.
      If the same data is needed again, the cache speeds up those future queries.

üì¶ Bigger Warehouse = Bigger Cache
      Larger warehouses have more compute power, which means more memory for caching.

üõë Cache Clears When Suspended
      Suspending a warehouse wipes the cache.
      When resumed, performance may be slower at first as the cache rebuilds.

‚öñÔ∏è Cost vs Performance Trade-off
      Suspending saves credits üí∞, but loses the cache.
      Keeping it running maintains the cache, offering faster performance, but at a cost.

üìù Summary:
Caching helps run queries faster by reusing data.
But if you suspend the warehouse to save costs, the cache is lost‚Äîso choose based on what's more important: cost efficiency or performance speed.
-----------------------------------------------------------------------------------------------------------------------------------------------


